 With Next.js

[Set up]
- npm init

(If Its manual)
- $ npm install next react react-dom
- Modify the package.json
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start"
  }
(Create-next-app)
- $npx create-next-app
- $ npm install --save express next react react-dom
- Make a server page for rendering => express is in next.js = next.js is the main


- $ npm install --save @zeit/next-css

- create next.config.js


[MySQL]
- $npm install mysql
  $npm install jsonwebtoken util
  Make it as a components and distridute to each page


[Image gallery]
- useEffect: client-side js, animation controll
- useState: status of animation 
- getServersideprops: obtain the data from DB


[More agents button]
- fetch(client-side http request) => promise from api
- in fetch call, method, body, content-type include
- uses of .then or await


[Login, Logout, Register]
- collect info of register$login form in onChange + useState
- POST data to authentication api, using async fetch & await
- add "path=/" in cookie to make it global
- logout = delete cookie with document.cookie + expire ~


[Add property form]
- decode cookies in getServersideprops and return boolean 
- cookie is loaded when web opens = no need to use useState or useEffect

