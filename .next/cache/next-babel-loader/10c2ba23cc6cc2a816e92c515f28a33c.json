{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport jwt from 'jsonwebtoken';\nimport fs from 'fs';\nimport { promisify } from 'util';\nvar readFileAsync = promisify(fs.readFile);\n\nfunction logInCookieTokenPayload(req) {\n  try {\n    var cookie = req.header('Cookie');\n    var regex = /logInCookie\\=([A-Za-z0-9\\.\\_\\-]+)/;\n    var token = cookie.match(regex)[1];\n    var decoded;\n    decoded = jwt.verify(token, 'ShokoDIDit');\n    return decoded;\n  } catch (_unused) {\n    return null;\n  }\n}\n\nfunction finish(body, res) {\n  res.send(body);\n  res.end();\n}\n\nfunction loggedIn2(withAgentsReplaced, tokenPayload, res) {\n  var addForm = \"\\n  <h2 style = \\\"text-align: center; margin-top: 50px\\\">Add more property</h2>\\n    <div className = \\\"addProperty\\\">\\n      <form action = \\\"/moreproperty\\\" method = \\\"POST\\\" id = \\\"moreProperty\\\">\\n        <div className = \\\"marginTop\\\">\\n          <label for = \\\"address\\\">Address of Property</label><br>\\n          <input id = \\\"address\\\" type = \\\"text\\\" name = \\\"address\\\" \\n                  placeholder=\\\"Property Address\\\" size=\\\"36\\\" required>\\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label for = \\\"inspection\\\">Inspection Date</label><br>\\n          <input id = \\\"inspection\\\" type = \\\"text\\\" name = \\\"inspection\\\" \\n                  placeholder=\\\"Open xx/xx/ xx:xxam/pm\\\" size=\\\"36\\\"  required>\\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label for = \\\"image_path\\\">Tytle of the Image File</label><br>\\n          <input id = \\\"image_path\\\" type = \\\"text\\\" name = \\\"image_path\\\" \\n                  placeholder=\\\"example.jpg\\\" size=\\\"36\\\"  required>\\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label for = \\\"agentName\\\">Agent's name</label>\\n          <input id = \\\"agentName\\\" type = \\\"text\\\" name = \\\"agentName\\\" \\n                  placeholder=\\\"Full name\\\" size=\\\"36\\\"  required>\\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label >The number of Bed Rooms</label>\\n          <div id=\\\"radio\\\">\\n            1 <input type=\\\"radio\\\" name=\\\"bed\\\" value=\\\"1\\\" >\\n            2 <input type=\\\"radio\\\" name=\\\"bed\\\" value=\\\"2\\\" >\\n            3 <input type=\\\"radio\\\" name=\\\"bed\\\" value=\\\"3\\\" >    \\n            4 <input type=\\\"radio\\\" name=\\\"bed\\\" value=\\\"4\\\" >    \\n            5 <input type=\\\"radio\\\" name=\\\"bed\\\" value=\\\"5\\\" >    \\n          </div> \\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label >The number of Shower Rooms</label>\\n          <div id=\\\"radio\\\">\\n            1 <input type=\\\"radio\\\" name=\\\"shower\\\" value=\\\"1\\\" >\\n            2 <input type=\\\"radio\\\" name=\\\"shower\\\" value=\\\"2\\\" >\\n            3 <input type=\\\"radio\\\" name=\\\"shower\\\" value=\\\"3\\\" >    \\n            4 <input type=\\\"radio\\\" name=\\\"shower\\\" value=\\\"4\\\" >    \\n            5 <input type=\\\"radio\\\" name=\\\"shower\\\" value=\\\"5\\\" >    \\n          </div> \\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label >The number of Car Parking</label>\\n          <div id=\\\"radio\\\">\\n            1 <input type=\\\"radio\\\" name=\\\"car\\\" value=\\\"1\\\" >\\n            2 <input type=\\\"radio\\\" name=\\\"car\\\" value=\\\"2\\\" >\\n            3 <input type=\\\"radio\\\" name=\\\"car\\\" value=\\\"3\\\" >    \\n            4 <input type=\\\"radio\\\" name=\\\"car\\\" value=\\\"4\\\" >    \\n            5 <input type=\\\"radio\\\" name=\\\"car\\\" value=\\\"5\\\" >    \\n          </div> \\n        </div>\\n        <button type = 'submit' id = \\\"addPropertyBtn\\\">OK</button>\\n      </form>\\n    </div>\";\n  var withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, addForm);\n  finish(withGreetingAndAgentsReplaced, res);\n}\n\n;\nexport var __N_SSP = true;\nexport function Index(_x, _x2, _x3) {\n  return _Index.apply(this, arguments);\n}\n_c2 = Index;\n\nfunction _Index() {\n  _Index = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res, _ref) {\n    var dbdata, data, dbdataString, str, i, withAgentsReplaced, tokenPayload, withGreetingAndAgentsReplaced;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dbdata = _ref.dbdata;\n            _context.prev = 1;\n            _context.next = 4;\n            return readFileAsync(__dirname + '/pages/Properties.js', 'utf-8');\n\n          case 4:\n            data = _context.sent;\n            _context.next = 11;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            res.status(404).send('No page found!');\n            res.end();\n\n          case 11:\n            dbdataString = toString(dbdata);\n            str = '';\n\n            for (i = 0; i < dbdataString.length; i++) {\n              str += \"\\n    <div className = \\\"imgs\\\">\\n        <br>\\n        <p className = \\\"right\\\">Ultimo Real Estate</p>\\n        <br>\\n        <a target=\\\"_blank\\\" href=\\\"./gallery?id=\".concat(dbdataString[i].id, \"\\\">\\n          <img src= '/static/\").concat(dbdataString[i].image_path, \"' alt=\\\"housePicture\\\" \\n          style={{width: \\\"100\\\", height: 242;}}>\\n        </a>\\n        <br>\\n        <h5 className = \\\"obi\\\">\").concat(dbdataString[i].name, \"\\n          <a href = \\\"#\\\">\\n            <img src = \\\"/static/\").concat(dbdataString[i].agents_photo, \"\\\" width = \\\"70px;\\\" height=\\\"70px;\\\" style = {{border-radius: \\\"50\\\";}}>\\n          </a>\\n        </h5>\\n        <br>\\n        <h4>\").concat(dbdataString[i].address, \"</h4>\\n        <br>\\n        <p className = \\\"icons\\\">\\n          <img src = \\\"/static/bed.png\\\">\").concat(dbdataString[i].bed, \"\\n          <img src = \\\"/static/shower.png\\\">\").concat(dbdataString[i].shower, \"\\n          <img src = \\\"/static/car.png\\\">\").concat(dbdataString[i].bed, \"</p>\\n        <p className = \\\"inspe\\\">\\n          <img src = \\\"/static/planner.png\\\"> Inspection : \").concat(dbdataString[i].inspection, \"</p>\\n        <br>\\n    </diV>\");\n            }\n\n            withAgentsReplaced = data.replace(/@@@property@@@/g, str);\n            tokenPayload = logInCookieTokenPayload(req);\n\n            if (tokenPayload && tokenPayload.role == 'agent') {\n              loggedIn2(withAgentsReplaced, tokenPayload, res);\n            } else {\n              withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, '');\n              finish(withGreetingAndAgentsReplaced, res);\n            }\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n  return _Index.apply(this, arguments);\n}\n\n_c = Index;\nexport default Index; // Add property feature\n// const addProperty =  async function(req, res){\n//   let address = req.body.address;\n//   let inspection = req.body.inspection;\n//   let image_path = req.body.image_path;\n//   let addName = req.body.agentName;\n//   let bed = req.body.bed;\n//   let shower = req.body.shower;\n//   let car = req.body.car;\n//   let number = parseInt(req.query.id);\n//   let rows = await dbMysql.promisifiedQuery(`SELECT * from agents WHERE name LIKE \"${addName}%\";`);\n//   let card = `\n//     <div className = \"imgs\">\n//       <br>\n//       <p className = \"right\">Ultimo Real Estate</p>\n//       <br>\n//       <a target=\"_blank\" href=\"./properties/house${number}.html\">\n//         <img src= /static/${image_path} alt=\"housePicture\" style=\"width:100%; height: 242px;\">\n//       </a><br>\n//       <h5 className = \"obi\">${rows[0].name}\n//         <a href = \"#\">\n//           <img src = \"/static/${rows[0].agents_photo}\" width = \"70px;\" height=\"70px;\" \n//           style = {{border-radius: \"50%;\"}}>\n//         </a>\n//       </h5>\n//       <br>\n//       <h4>${address}</h4><br>\n//       <p className = \"icons\">\n//         <img src = \"/static/bed.png\">${bed}\n//         <img src = \"/static/shower.png\">${shower}\n//         <img src = \"/static/car.png\">${car}\n//       </p>\n//       <p className = \"inspe\">\n//         <img src = \"/static/planner.png\"> Inspection : ${inspection}\n//       </p>\n//       <br>\n//     </diV>`;\n//   await dbMysql.promisifiedQuery(`\n//   INSERT INTO property (agent_id, address, image_path, inspection, \n//     bed, shower, car) \n//     VALUES ('${rows[0].id}','${address}', '${image_path}', '${inspection}', ${bed}, ${shower}, ${car});\n//   `);\n//   res.send (card);  \n//   res.end();\n// }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Index\");","map":{"version":3,"sources":["C:/Users/shoko/src/URE3-React/ure-nextjs/pages/dbproperty.js"],"names":["jwt","fs","promisify","readFileAsync","readFile","logInCookieTokenPayload","req","cookie","header","regex","token","match","decoded","verify","finish","body","res","send","end","loggedIn2","withAgentsReplaced","tokenPayload","addForm","withGreetingAndAgentsReplaced","replace","Index","dbdata","__dirname","data","status","dbdataString","toString","str","i","length","id","image_path","name","agents_photo","address","bed","shower","inspection","role"],"mappings":"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","sourcesContent":["import queryAsync from '../mysql';\r\nimport jwt from 'jsonwebtoken';\r\nimport fs from 'fs';\r\nimport { promisify } from 'util';\r\n\r\nconst readFileAsync = promisify(fs.readFile);\r\n\r\nfunction logInCookieTokenPayload(req) {\r\n  try{\r\n    let cookie = req.header('Cookie');\r\n    const regex = /logInCookie\\=([A-Za-z0-9\\.\\_\\-]+)/;\r\n    let token = cookie.match(regex)[1];\r\n    let decoded;\r\n    decoded = jwt.verify(token, 'ShokoDIDit');\r\n    return decoded;\r\n  }catch{\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction finish(body, res) {\r\n  res.send(body);\r\n  res.end();\r\n}\r\n\r\nfunction loggedIn2(withAgentsReplaced, tokenPayload, res){\r\n  let addForm = `\r\n  <h2 style = \"text-align: center; margin-top: 50px\">Add more property</h2>\r\n    <div className = \"addProperty\">\r\n      <form action = \"/moreproperty\" method = \"POST\" id = \"moreProperty\">\r\n        <div className = \"marginTop\">\r\n          <label for = \"address\">Address of Property</label><br>\r\n          <input id = \"address\" type = \"text\" name = \"address\" \r\n                  placeholder=\"Property Address\" size=\"36\" required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"inspection\">Inspection Date</label><br>\r\n          <input id = \"inspection\" type = \"text\" name = \"inspection\" \r\n                  placeholder=\"Open xx/xx/ xx:xxam/pm\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"image_path\">Tytle of the Image File</label><br>\r\n          <input id = \"image_path\" type = \"text\" name = \"image_path\" \r\n                  placeholder=\"example.jpg\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"agentName\">Agent's name</label>\r\n          <input id = \"agentName\" type = \"text\" name = \"agentName\" \r\n                  placeholder=\"Full name\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Bed Rooms</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"bed\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"bed\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"bed\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"bed\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"bed\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Shower Rooms</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"shower\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"shower\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"shower\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"shower\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"shower\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Car Parking</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"car\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"car\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"car\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"car\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"car\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <button type = 'submit' id = \"addPropertyBtn\">OK</button>\r\n      </form>\r\n    </div>`;\r\n  let withGreetingAndAgentsReplaced = \r\n        withAgentsReplaced.replace(/@@@addForm@@@/g, addForm);\r\n  finish(withGreetingAndAgentsReplaced, res)\r\n}\r\n\r\nexport async function getServerSideProps(){\r\n\r\n  let rows = await queryAsync(`\r\n    SELECT property.id, property.address, property.image_path, property.inspection, \r\n    property.bed, property.shower, property.car, agents.name, agents.agents_photo \r\n    FROM property \r\n    JOIN agents ON property.agent_id = agents.id;\r\n  `);\r\n    \r\n  let dbdata = JSON.stringify(rows);\r\n\r\n  return {\r\n    props: {\r\n      dbdata\r\n    },\r\n  }\r\n};\r\n\r\nexport async function Index(req, res, { dbdata }){\r\n  let data;\r\n  try{\r\n    data = await readFileAsync(__dirname + '/pages/Properties.js', 'utf-8');\r\n  }catch{\r\n    res.status(404).send('No page found!');\r\n    res.end();\r\n  }\r\n\r\n  let dbdataString = toString(dbdata);\r\n\r\n  let str = '';\r\n  for (let i = 0; i < dbdataString.length; i++){\r\n    str += `\r\n    <div className = \"imgs\">\r\n        <br>\r\n        <p className = \"right\">Ultimo Real Estate</p>\r\n        <br>\r\n        <a target=\"_blank\" href=\"./gallery?id=${dbdataString[i].id}\">\r\n          <img src= '/static/${dbdataString[i].image_path}' alt=\"housePicture\" \r\n          style={{width: \"100\", height: 242;}}>\r\n        </a>\r\n        <br>\r\n        <h5 className = \"obi\">${dbdataString[i].name}\r\n          <a href = \"#\">\r\n            <img src = \"/static/${dbdataString[i].agents_photo}\" width = \"70px;\" height=\"70px;\" style = {{border-radius: \"50\";}}>\r\n          </a>\r\n        </h5>\r\n        <br>\r\n        <h4>${dbdataString[i].address}</h4>\r\n        <br>\r\n        <p className = \"icons\">\r\n          <img src = \"/static/bed.png\">${dbdataString[i].bed}\r\n          <img src = \"/static/shower.png\">${dbdataString[i].shower}\r\n          <img src = \"/static/car.png\">${dbdataString[i].bed}</p>\r\n        <p className = \"inspe\">\r\n          <img src = \"/static/planner.png\"> Inspection : ${dbdataString[i].inspection}</p>\r\n        <br>\r\n    </diV>`\r\n  }\r\n  \r\n\r\n  const withAgentsReplaced = data.replace(/@@@property@@@/g, str)\r\n  let tokenPayload = logInCookieTokenPayload(req);\r\n\r\n  if(tokenPayload && tokenPayload.role == 'agent'){\r\n    loggedIn2(withAgentsReplaced, tokenPayload, res)\r\n  }else{\r\n    const withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, '');\r\n    finish(withGreetingAndAgentsReplaced, res);\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\n\r\n// Add property feature\r\n// const addProperty =  async function(req, res){\r\n//   let address = req.body.address;\r\n//   let inspection = req.body.inspection;\r\n//   let image_path = req.body.image_path;\r\n//   let addName = req.body.agentName;\r\n//   let bed = req.body.bed;\r\n//   let shower = req.body.shower;\r\n//   let car = req.body.car;\r\n//   let number = parseInt(req.query.id);\r\n\r\n//   let rows = await dbMysql.promisifiedQuery(`SELECT * from agents WHERE name LIKE \"${addName}%\";`);\r\n//   let card = `\r\n//     <div className = \"imgs\">\r\n//       <br>\r\n//       <p className = \"right\">Ultimo Real Estate</p>\r\n//       <br>\r\n//       <a target=\"_blank\" href=\"./properties/house${number}.html\">\r\n//         <img src= /static/${image_path} alt=\"housePicture\" style=\"width:100%; height: 242px;\">\r\n//       </a><br>\r\n//       <h5 className = \"obi\">${rows[0].name}\r\n//         <a href = \"#\">\r\n//           <img src = \"/static/${rows[0].agents_photo}\" width = \"70px;\" height=\"70px;\" \r\n//           style = {{border-radius: \"50%;\"}}>\r\n//         </a>\r\n//       </h5>\r\n//       <br>\r\n//       <h4>${address}</h4><br>\r\n//       <p className = \"icons\">\r\n//         <img src = \"/static/bed.png\">${bed}\r\n//         <img src = \"/static/shower.png\">${shower}\r\n//         <img src = \"/static/car.png\">${car}\r\n//       </p>\r\n//       <p className = \"inspe\">\r\n//         <img src = \"/static/planner.png\"> Inspection : ${inspection}\r\n//       </p>\r\n//       <br>\r\n//     </diV>`;\r\n//   await dbMysql.promisifiedQuery(`\r\n//   INSERT INTO property (agent_id, address, image_path, inspection, \r\n//     bed, shower, car) \r\n//     VALUES ('${rows[0].id}','${address}', '${image_path}', '${inspection}', ${bed}, ${shower}, ${car});\r\n//   `);\r\n//   res.send (card);  \r\n//   res.end();\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}