{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport NavBar from './NavBar';\nimport MetaHead from './Head';\nimport Footer from \"./Footer\";\nimport Link from 'next/link';\nimport queryAsync from '../mysql';\nimport '../style.css';\nexport async function getServerSideProps(req, res) {\n  let idNumber = parseInt(req.query.id); // let queryPro = \"SELECT * FROM property WHERE id = \"+ idNumber;\n  // let dbdataPro = await queryAsync(queryPro);\n  // console.log(dbdataPro);\n  // let agentID = dbdataPro.agent_id;\n  // console.log(agentID);\n  // let queryAgent = \"SELECT name, agents_photo FROM agents WHERE id =\"+agentID;\n  // console.log(queryAgent);\n  // let dbdataAgent = await queryAsync(queryAgent);\n\n  let select = [\"property.address\", \"property.image_path\", \"property.inspection\", \"property.bed\", \"property.shower\", \"property.car\", \"agents.name\", \"agents.agents_photo\"];\n  let queryPro = \"SELECT \" + select + \" FROM property WHERE properid = \" + idNumber;\n  \"JOIN agents ON property.agent_id = agents.id\";\n  let dbdataPro = await queryAsync(queryPro);\n  let rowsPro = JSON.parse(JSON.stringify(dbdataPro)); // let rowsAgent = JSON.parse(JSON.stringify(dbdataAgent));\n\n  return {\n    props: {\n      rowsPro // rowsAgent\n\n    }\n  };\n}\n\nfunction Index({\n  rowsPro,\n  rowsAgent\n}) {\n  return __jsx(React.Fragment, null, rowsPro, __jsx(\"br\", null));\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/shoko/src/URE3-React/ure-nextjs/pages/gallery.js"],"names":["NavBar","MetaHead","Footer","Link","queryAsync","getServerSideProps","req","res","idNumber","parseInt","query","id","select","queryPro","dbdataPro","rowsPro","JSON","parse","stringify","props","Index","rowsAgent"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,UAAvB;AAEA,OAAO,cAAP;AAEA,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAAuCC,GAAvC,EAA2C;AAEhD,MAAIC,QAAQ,GAAGC,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAUC,EAAX,CAAvB,CAFgD,CAGhD;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;AACA,MAAIC,MAAM,GAAG,CACX,kBADW,EAEX,qBAFW,EAGX,qBAHW,EAIX,cAJW,EAKX,iBALW,EAMX,cANW,EAOX,aAPW,EAQX,qBARW,CAAb;AAWA,MAAIC,QAAQ,GACZ,YAAYD,MAAZ,GAAqB,kCAArB,GAA0DJ,QAD1D;AAEA;AACA,MAAIM,SAAS,GAAG,MAAMV,UAAU,CAACS,QAAD,CAAhC;AAEA,MAAIE,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,SAAf,CAAX,CAAd,CA7BgD,CA8BhD;;AAEA,SAAO;AACLK,IAAAA,KAAK,EAAC;AACJJ,MAAAA,OADI,CAEJ;;AAFI;AADD,GAAP;AAMD;;AAED,SAASK,KAAT,CAAe;AAACL,EAAAA,OAAD;AAAUM,EAAAA;AAAV,CAAf,EAAoC;AAElC,SACE,4BACCN,OADD,EAEA,iBAFA,CADF;AAOD;;AAED,eAAeK,KAAf","sourcesContent":["import NavBar from './NavBar';\r\nimport MetaHead from './Head';\r\nimport Footer from \"./Footer\";\r\nimport Link from 'next/link';\r\nimport queryAsync from '../mysql';\r\n\r\nimport '../style.css';\r\n\r\nexport async function getServerSideProps(req, res){\r\n\r\n  let idNumber = parseInt(req.query.id);\r\n  // let queryPro = \"SELECT * FROM property WHERE id = \"+ idNumber;\r\n  // let dbdataPro = await queryAsync(queryPro);\r\n  // console.log(dbdataPro);\r\n\r\n  // let agentID = dbdataPro.agent_id;\r\n  // console.log(agentID);\r\n\r\n  // let queryAgent = \"SELECT name, agents_photo FROM agents WHERE id =\"+agentID;\r\n  // console.log(queryAgent);\r\n  // let dbdataAgent = await queryAsync(queryAgent);\r\n  let select = [\r\n    \"property.address\", \r\n    \"property.image_path\", \r\n    \"property.inspection\", \r\n    \"property.bed\", \r\n    \"property.shower\", \r\n    \"property.car\", \r\n    \"agents.name\", \r\n    \"agents.agents_photo\"\r\n  ]\r\n\r\n  let queryPro = \r\n  \"SELECT \" + select + \" FROM property WHERE properid = \" + idNumber\r\n  \"JOIN agents ON property.agent_id = agents.id\";\r\n  let dbdataPro = await queryAsync(queryPro);\r\n  \r\n  let rowsPro = JSON.parse(JSON.stringify(dbdataPro));\r\n  // let rowsAgent = JSON.parse(JSON.stringify(dbdataAgent));\r\n  \r\n  return {\r\n    props:{\r\n      rowsPro\r\n      // rowsAgent\r\n    },\r\n  }\r\n}\r\n\r\nfunction Index({rowsPro, rowsAgent}){\r\n\r\n  return (\r\n    <>\r\n    {rowsPro}\r\n    <br />\r\n    {/* {rowsAgent} */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}