{"ast":null,"code":"import queryAsync from '../mysql';\nimport jwt from 'jsonwebtoken';\nimport fs from 'fs';\nimport { promisify } from 'util';\nconst readFileAsync = promisify(fs.readFile);\n\nfunction logInCookieTokenPayload(req) {\n  try {\n    let cookie = req.header('Cookie');\n    const regex = /logInCookie\\=([A-Za-z0-9\\.\\_\\-]+)/;\n    let token = cookie.match(regex)[1];\n    let decoded;\n    decoded = jwt.verify(token, 'ShokoDIDit');\n    return decoded;\n  } catch {\n    return null;\n  }\n}\n\nfunction finish(body, res) {\n  res.send(body);\n  res.end();\n}\n\nfunction loggedIn2(withAgentsReplaced, tokenPayload, res) {\n  let addForm = `\n  <h2 style = \"text-align: center; margin-top: 50px\">Add more property</h2>\n    <div className = \"addProperty\">\n      <form action = \"/moreproperty\" method = \"POST\" id = \"moreProperty\">\n        <div className = \"marginTop\">\n          <label for = \"address\">Address of Property</label><br>\n          <input id = \"address\" type = \"text\" name = \"address\" \n                  placeholder=\"Property Address\" size=\"36\" required>\n        </div>\n        <div className = \"marginTop\">\n          <label for = \"inspection\">Inspection Date</label><br>\n          <input id = \"inspection\" type = \"text\" name = \"inspection\" \n                  placeholder=\"Open xx/xx/ xx:xxam/pm\" size=\"36\"  required>\n        </div>\n        <div className = \"marginTop\">\n          <label for = \"image_path\">Tytle of the Image File</label><br>\n          <input id = \"image_path\" type = \"text\" name = \"image_path\" \n                  placeholder=\"example.jpg\" size=\"36\"  required>\n        </div>\n        <div className = \"marginTop\">\n          <label for = \"agentName\">Agent's name</label>\n          <input id = \"agentName\" type = \"text\" name = \"agentName\" \n                  placeholder=\"Full name\" size=\"36\"  required>\n        </div>\n        <div className = \"marginTop\">\n          <label >The number of Bed Rooms</label>\n          <div id=\"radio\">\n            1 <input type=\"radio\" name=\"bed\" value=\"1\" >\n            2 <input type=\"radio\" name=\"bed\" value=\"2\" >\n            3 <input type=\"radio\" name=\"bed\" value=\"3\" >    \n            4 <input type=\"radio\" name=\"bed\" value=\"4\" >    \n            5 <input type=\"radio\" name=\"bed\" value=\"5\" >    \n          </div> \n        </div>\n        <div className = \"marginTop\">\n          <label >The number of Shower Rooms</label>\n          <div id=\"radio\">\n            1 <input type=\"radio\" name=\"shower\" value=\"1\" >\n            2 <input type=\"radio\" name=\"shower\" value=\"2\" >\n            3 <input type=\"radio\" name=\"shower\" value=\"3\" >    \n            4 <input type=\"radio\" name=\"shower\" value=\"4\" >    \n            5 <input type=\"radio\" name=\"shower\" value=\"5\" >    \n          </div> \n        </div>\n        <div className = \"marginTop\">\n          <label >The number of Car Parking</label>\n          <div id=\"radio\">\n            1 <input type=\"radio\" name=\"car\" value=\"1\" >\n            2 <input type=\"radio\" name=\"car\" value=\"2\" >\n            3 <input type=\"radio\" name=\"car\" value=\"3\" >    \n            4 <input type=\"radio\" name=\"car\" value=\"4\" >    \n            5 <input type=\"radio\" name=\"car\" value=\"5\" >    \n          </div> \n        </div>\n        <button type = 'submit' id = \"addPropertyBtn\">OK</button>\n      </form>\n    </div>`;\n  let withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, addForm);\n  finish(withGreetingAndAgentsReplaced, res);\n}\n\nexport async function propertyMain(req, res) {\n  let data;\n\n  try {\n    data = await readFileAsync(__dirname + '/pages/Properties.js', 'utf-8');\n  } catch {\n    res.status(404).send('No page found!');\n    res.end();\n  }\n\n  let rows = await queryAsync(`\n    SELECT property.id, property.address, property.image_path, property.inspection, \n    property.bed, property.shower, property.car, agents.name, agents.agents_photo \n    FROM property \n    JOIN agents ON property.agent_id = agents.id;\n  `);\n  let str = '';\n\n  for (let i = 0; i < rows.length; i++) {\n    str += `\n    <div className = \"imgs\">\n        <br>\n        <p className = \"right\">Ultimo Real Estate</p>\n        <br>\n        <a target=\"_blank\" href=\"./gallery?id=${rows[i].id}\">\n          <img src= '/static/${rows[i].image_path}' alt=\"housePicture\" \n          style={{width: \"100\", height: 242;}}>\n        </a>\n        <br>\n        <h5 className = \"obi\">${rows[i].name}\n          <a href = \"#\">\n            <img src = \"/static/${rows[i].agents_photo}\" width = \"70px;\" height=\"70px;\" style = {{border-radius: \"50\";}}>\n          </a>\n        </h5>\n        <br>\n        <h4>${rows[i].address}</h4>\n        <br>\n        <p className = \"icons\">\n          <img src = \"/static/bed.png\">${rows[i].bed}\n          <img src = \"/static/shower.png\">${rows[i].shower}\n          <img src = \"/static/car.png\">${rows[i].bed}</p>\n        <p className = \"inspe\">\n          <img src = \"/static/planner.png\"> Inspection : ${rows[i].inspection}</p>\n        <br>\n    </diV>`;\n  }\n\n  const withAgentsReplaced = data.replace(/@@@property@@@/g, str);\n  let tokenPayload = logInCookieTokenPayload(req);\n\n  if (tokenPayload && tokenPayload.role == 'agent') {\n    loggedIn2(withAgentsReplaced, tokenPayload, res);\n  } else {\n    const withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, '');\n    finish(withGreetingAndAgentsReplaced, res);\n  }\n}\n; // Individual property pages\n\nasync function individualProperty(req, res) {\n  let idNumber = parseInt(req.query.id);\n  let query = `SELECT * FROM property WHERE id = ${idNumber};`;\n  let rows = await dbMysql.promisifiedQuery(query);\n  let agentID = rows[0].agent_id;\n  let agentQuery = `SELECT name, agents_photo   FROM  agents WHERE id = ${agentID}`;\n  let agentRows = await dbMysql.promisifiedQuery(agentQuery);\n  res.render('gallery.ejs', {\n    address: rows[0].address,\n    houseImage: rows[0].image_path,\n    shower: rows[0].shower,\n    bed: rows[0].bed,\n    car: rows[0].car,\n    inspection: rows[0].inspection,\n    name: agentRows[0].name,\n    agents_photo: agentRows[0].agents_photo\n  });\n  res.end();\n} // Add property feature\n\n\nconst addProperty = async function (req, res) {\n  let address = req.body.address;\n  let inspection = req.body.inspection;\n  let image_path = req.body.image_path;\n  let addName = req.body.agentName;\n  let bed = req.body.bed;\n  let shower = req.body.shower;\n  let car = req.body.car;\n  let number = parseInt(req.query.id);\n  let rows = await dbMysql.promisifiedQuery(`SELECT * from agents WHERE name LIKE \"${addName}%\";`);\n  let card = `\n    <div className = \"imgs\">\n      <br>\n      <p className = \"right\">Ultimo Real Estate</p>\n      <br>\n      <a target=\"_blank\" href=\"./properties/house${number}.html\">\n        <img src= /static/${image_path} alt=\"housePicture\" style=\"width:100%; height: 242px;\">\n      </a><br>\n      <h5 className = \"obi\">${rows[0].name}\n        <a href = \"#\">\n          <img src = \"/static/${rows[0].agents_photo}\" width = \"70px;\" height=\"70px;\" \n          style = {{border-radius: \"50%;\"}}>\n        </a>\n      </h5>\n      <br>\n      <h4>${address}</h4><br>\n      <p className = \"icons\">\n        <img src = \"/static/bed.png\">${bed}\n        <img src = \"/static/shower.png\">${shower}\n        <img src = \"/static/car.png\">${car}\n      </p>\n      <p className = \"inspe\">\n        <img src = \"/static/planner.png\"> Inspection : ${inspection}\n      </p>\n      <br>\n    </diV>`;\n  await dbMysql.promisifiedQuery(`\n  INSERT INTO property (agent_id, address, image_path, inspection, \n    bed, shower, car) \n    VALUES ('${rows[0].id}','${address}', '${image_path}', '${inspection}', ${bed}, ${shower}, ${car});\n  `);\n  res.send(card);\n  res.end();\n}; // Export\n\n\nexport default propertyMain; // module.exports.individualProperty = individualProperty;\n// module.exports.addProperty = addProperty;","map":{"version":3,"sources":["C:/Users/shoko/src/URE3-React/ure-nextjs/pages/dbproperty.js"],"names":["queryAsync","jwt","fs","promisify","readFileAsync","readFile","logInCookieTokenPayload","req","cookie","header","regex","token","match","decoded","verify","finish","body","res","send","end","loggedIn2","withAgentsReplaced","tokenPayload","addForm","withGreetingAndAgentsReplaced","replace","propertyMain","data","__dirname","status","rows","str","i","length","id","image_path","name","agents_photo","address","bed","shower","inspection","role","individualProperty","idNumber","parseInt","query","dbMysql","promisifiedQuery","agentID","agent_id","agentQuery","agentRows","render","houseImage","car","addProperty","addName","agentName","number","card"],"mappings":"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","sourcesContent":["import queryAsync from '../mysql';\r\nimport jwt from 'jsonwebtoken';\r\nimport fs from 'fs';\r\nimport { promisify } from 'util';\r\n\r\nconst readFileAsync = promisify(fs.readFile);\r\n\r\nfunction logInCookieTokenPayload(req) {\r\ntry{\r\n    let cookie = req.header('Cookie');\r\n    const regex = /logInCookie\\=([A-Za-z0-9\\.\\_\\-]+)/;\r\n    let token = cookie.match(regex)[1];\r\n    let decoded;\r\n    decoded = jwt.verify(token, 'ShokoDIDit');\r\n    return decoded;\r\n  }catch{\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction finish(body, res) {\r\n  res.send(body);\r\n  res.end();\r\n}\r\n\r\nfunction loggedIn2(withAgentsReplaced, tokenPayload, res){\r\n  let addForm = `\r\n  <h2 style = \"text-align: center; margin-top: 50px\">Add more property</h2>\r\n    <div className = \"addProperty\">\r\n      <form action = \"/moreproperty\" method = \"POST\" id = \"moreProperty\">\r\n        <div className = \"marginTop\">\r\n          <label for = \"address\">Address of Property</label><br>\r\n          <input id = \"address\" type = \"text\" name = \"address\" \r\n                  placeholder=\"Property Address\" size=\"36\" required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"inspection\">Inspection Date</label><br>\r\n          <input id = \"inspection\" type = \"text\" name = \"inspection\" \r\n                  placeholder=\"Open xx/xx/ xx:xxam/pm\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"image_path\">Tytle of the Image File</label><br>\r\n          <input id = \"image_path\" type = \"text\" name = \"image_path\" \r\n                  placeholder=\"example.jpg\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"agentName\">Agent's name</label>\r\n          <input id = \"agentName\" type = \"text\" name = \"agentName\" \r\n                  placeholder=\"Full name\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Bed Rooms</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"bed\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"bed\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"bed\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"bed\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"bed\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Shower Rooms</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"shower\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"shower\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"shower\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"shower\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"shower\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Car Parking</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"car\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"car\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"car\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"car\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"car\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <button type = 'submit' id = \"addPropertyBtn\">OK</button>\r\n      </form>\r\n    </div>`;\r\n  let withGreetingAndAgentsReplaced = \r\n        withAgentsReplaced.replace(/@@@addForm@@@/g, addForm);\r\n  finish(withGreetingAndAgentsReplaced, res)\r\n}\r\n\r\nexport async function propertyMain(req, res){\r\n\r\n  let data;\r\n  try{\r\n    data = await readFileAsync(__dirname + '/pages/Properties.js', 'utf-8');\r\n  }catch{\r\n    res.status(404).send('No page found!');\r\n    res.end();\r\n  }\r\n\r\n  let rows = await queryAsync(`\r\n    SELECT property.id, property.address, property.image_path, property.inspection, \r\n    property.bed, property.shower, property.car, agents.name, agents.agents_photo \r\n    FROM property \r\n    JOIN agents ON property.agent_id = agents.id;\r\n  `);\r\n    \r\n  let str = '';\r\n  for (let i = 0; i < rows.length; i++){\r\n    str += `\r\n    <div className = \"imgs\">\r\n        <br>\r\n        <p className = \"right\">Ultimo Real Estate</p>\r\n        <br>\r\n        <a target=\"_blank\" href=\"./gallery?id=${rows[i].id}\">\r\n          <img src= '/static/${rows[i].image_path}' alt=\"housePicture\" \r\n          style={{width: \"100\", height: 242;}}>\r\n        </a>\r\n        <br>\r\n        <h5 className = \"obi\">${rows[i].name}\r\n          <a href = \"#\">\r\n            <img src = \"/static/${rows[i].agents_photo}\" width = \"70px;\" height=\"70px;\" style = {{border-radius: \"50\";}}>\r\n          </a>\r\n        </h5>\r\n        <br>\r\n        <h4>${rows[i].address}</h4>\r\n        <br>\r\n        <p className = \"icons\">\r\n          <img src = \"/static/bed.png\">${rows[i].bed}\r\n          <img src = \"/static/shower.png\">${rows[i].shower}\r\n          <img src = \"/static/car.png\">${rows[i].bed}</p>\r\n        <p className = \"inspe\">\r\n          <img src = \"/static/planner.png\"> Inspection : ${rows[i].inspection}</p>\r\n        <br>\r\n    </diV>`\r\n  }\r\n  const withAgentsReplaced = data.replace(/@@@property@@@/g, str)\r\n  let tokenPayload = logInCookieTokenPayload(req);\r\n\r\n  if(tokenPayload && tokenPayload.role == 'agent'){\r\n    loggedIn2(withAgentsReplaced, tokenPayload, res)\r\n  }else{\r\n    const withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, '');\r\n    finish(withGreetingAndAgentsReplaced, res);\r\n  }\r\n};\r\n\r\n\r\n// Individual property pages\r\nasync function individualProperty(req, res){\r\n  let idNumber = parseInt(req.query.id);\r\n  let query = `SELECT * FROM property WHERE id = ${idNumber};`;\r\n  let rows = await dbMysql.promisifiedQuery(query);\r\n  let agentID = rows[0].agent_id;\r\n\r\n  let agentQuery = `SELECT name, agents_photo   FROM  agents WHERE id = ${agentID}`;\r\n  let agentRows = await dbMysql.promisifiedQuery(agentQuery);\r\n  res.render('gallery.ejs', {\r\n    address: rows[0].address,\r\n    houseImage: rows[0].image_path,\r\n    shower: rows[0].shower,\r\n    bed: rows[0].bed,\r\n    car: rows[0].car,\r\n    inspection: rows[0].inspection,\r\n    name: agentRows[0].name,\r\n    agents_photo: agentRows[0].agents_photo\r\n  });\r\n  res.end();\r\n}\r\n\r\n\r\n// Add property feature\r\nconst addProperty =  async function(req, res){\r\n  let address = req.body.address;\r\n  let inspection = req.body.inspection;\r\n  let image_path = req.body.image_path;\r\n  let addName = req.body.agentName;\r\n  let bed = req.body.bed;\r\n  let shower = req.body.shower;\r\n  let car = req.body.car;\r\n  let number = parseInt(req.query.id);\r\n\r\n  let rows = await dbMysql.promisifiedQuery(`SELECT * from agents WHERE name LIKE \"${addName}%\";`);\r\n  let card = `\r\n    <div className = \"imgs\">\r\n      <br>\r\n      <p className = \"right\">Ultimo Real Estate</p>\r\n      <br>\r\n      <a target=\"_blank\" href=\"./properties/house${number}.html\">\r\n        <img src= /static/${image_path} alt=\"housePicture\" style=\"width:100%; height: 242px;\">\r\n      </a><br>\r\n      <h5 className = \"obi\">${rows[0].name}\r\n        <a href = \"#\">\r\n          <img src = \"/static/${rows[0].agents_photo}\" width = \"70px;\" height=\"70px;\" \r\n          style = {{border-radius: \"50%;\"}}>\r\n        </a>\r\n      </h5>\r\n      <br>\r\n      <h4>${address}</h4><br>\r\n      <p className = \"icons\">\r\n        <img src = \"/static/bed.png\">${bed}\r\n        <img src = \"/static/shower.png\">${shower}\r\n        <img src = \"/static/car.png\">${car}\r\n      </p>\r\n      <p className = \"inspe\">\r\n        <img src = \"/static/planner.png\"> Inspection : ${inspection}\r\n      </p>\r\n      <br>\r\n    </diV>`;\r\n  await dbMysql.promisifiedQuery(`\r\n  INSERT INTO property (agent_id, address, image_path, inspection, \r\n    bed, shower, car) \r\n    VALUES ('${rows[0].id}','${address}', '${image_path}', '${inspection}', ${bed}, ${shower}, ${car});\r\n  `);\r\n  res.send (card);  \r\n  res.end();\r\n}\r\n\r\n\r\n// Export\r\nexport default propertyMain;\r\n// module.exports.individualProperty = individualProperty;\r\n// module.exports.addProperty = addProperty;"]},"metadata":{},"sourceType":"module"}