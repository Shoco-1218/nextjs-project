{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport queryAsync from '../mysql';\nimport jwt from 'jsonwebtoken';\nimport fs from 'fs';\nimport { promisify } from 'util';\nvar readFileAsync = promisify(fs.readFile);\n\nfunction logInCookieTokenPayload(req) {\n  try {\n    var cookie = req.header('Cookie');\n    var regex = /logInCookie\\=([A-Za-z0-9\\.\\_\\-]+)/;\n    var token = cookie.match(regex)[1];\n    var decoded;\n    decoded = jwt.verify(token, 'ShokoDIDit');\n    return decoded;\n  } catch (_unused) {\n    return null;\n  }\n}\n\nfunction finish(body, res) {\n  res.send(body);\n  res.end();\n}\n\nfunction loggedIn2(withAgentsReplaced, tokenPayload, res) {\n  var addForm = \"\\n  <h2 style = \\\"text-align: center; margin-top: 50px\\\">Add more property</h2>\\n    <div className = \\\"addProperty\\\">\\n      <form action = \\\"/moreproperty\\\" method = \\\"POST\\\" id = \\\"moreProperty\\\">\\n        <div className = \\\"marginTop\\\">\\n          <label for = \\\"address\\\">Address of Property</label><br>\\n          <input id = \\\"address\\\" type = \\\"text\\\" name = \\\"address\\\" \\n                  placeholder=\\\"Property Address\\\" size=\\\"36\\\" required>\\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label for = \\\"inspection\\\">Inspection Date</label><br>\\n          <input id = \\\"inspection\\\" type = \\\"text\\\" name = \\\"inspection\\\" \\n                  placeholder=\\\"Open xx/xx/ xx:xxam/pm\\\" size=\\\"36\\\"  required>\\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label for = \\\"image_path\\\">Tytle of the Image File</label><br>\\n          <input id = \\\"image_path\\\" type = \\\"text\\\" name = \\\"image_path\\\" \\n                  placeholder=\\\"example.jpg\\\" size=\\\"36\\\"  required>\\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label for = \\\"agentName\\\">Agent's name</label>\\n          <input id = \\\"agentName\\\" type = \\\"text\\\" name = \\\"agentName\\\" \\n                  placeholder=\\\"Full name\\\" size=\\\"36\\\"  required>\\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label >The number of Bed Rooms</label>\\n          <div id=\\\"radio\\\">\\n            1 <input type=\\\"radio\\\" name=\\\"bed\\\" value=\\\"1\\\" >\\n            2 <input type=\\\"radio\\\" name=\\\"bed\\\" value=\\\"2\\\" >\\n            3 <input type=\\\"radio\\\" name=\\\"bed\\\" value=\\\"3\\\" >    \\n            4 <input type=\\\"radio\\\" name=\\\"bed\\\" value=\\\"4\\\" >    \\n            5 <input type=\\\"radio\\\" name=\\\"bed\\\" value=\\\"5\\\" >    \\n          </div> \\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label >The number of Shower Rooms</label>\\n          <div id=\\\"radio\\\">\\n            1 <input type=\\\"radio\\\" name=\\\"shower\\\" value=\\\"1\\\" >\\n            2 <input type=\\\"radio\\\" name=\\\"shower\\\" value=\\\"2\\\" >\\n            3 <input type=\\\"radio\\\" name=\\\"shower\\\" value=\\\"3\\\" >    \\n            4 <input type=\\\"radio\\\" name=\\\"shower\\\" value=\\\"4\\\" >    \\n            5 <input type=\\\"radio\\\" name=\\\"shower\\\" value=\\\"5\\\" >    \\n          </div> \\n        </div>\\n        <div className = \\\"marginTop\\\">\\n          <label >The number of Car Parking</label>\\n          <div id=\\\"radio\\\">\\n            1 <input type=\\\"radio\\\" name=\\\"car\\\" value=\\\"1\\\" >\\n            2 <input type=\\\"radio\\\" name=\\\"car\\\" value=\\\"2\\\" >\\n            3 <input type=\\\"radio\\\" name=\\\"car\\\" value=\\\"3\\\" >    \\n            4 <input type=\\\"radio\\\" name=\\\"car\\\" value=\\\"4\\\" >    \\n            5 <input type=\\\"radio\\\" name=\\\"car\\\" value=\\\"5\\\" >    \\n          </div> \\n        </div>\\n        <button type = 'submit' id = \\\"addPropertyBtn\\\">OK</button>\\n      </form>\\n    </div>\";\n  var withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, addForm);\n  finish(withGreetingAndAgentsReplaced, res);\n}\n\nexport function propertyMain(_x, _x2) {\n  return _propertyMain.apply(this, arguments);\n}\n\nfunction _propertyMain() {\n  _propertyMain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res) {\n    var data, rows, str, i, withAgentsReplaced, tokenPayload, withGreetingAndAgentsReplaced;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return readFileAsync(__dirname + '/pages/Properties.js', 'utf-8');\n\n          case 3:\n            data = _context2.sent;\n            _context2.next = 10;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(404).send('No page found!');\n            res.end();\n\n          case 10:\n            _context2.next = 12;\n            return queryAsync(\"\\n    SELECT property.id, property.address, property.image_path, property.inspection, \\n    property.bed, property.shower, property.car, agents.name, agents.agents_photo \\n    FROM property \\n    JOIN agents ON property.agent_id = agents.id;\\n  \");\n\n          case 12:\n            rows = _context2.sent;\n            str = '';\n\n            for (i = 0; i < rows.length; i++) {\n              str += \"\\n    <div className = \\\"imgs\\\">\\n        <br>\\n        <p className = \\\"right\\\">Ultimo Real Estate</p>\\n        <br>\\n        <a target=\\\"_blank\\\" href=\\\"./gallery?id=\".concat(rows[i].id, \"\\\">\\n          <img src= '/static/\").concat(rows[i].image_path, \"' alt=\\\"housePicture\\\" \\n          style={{width: \\\"100\\\", height: 242;}}>\\n        </a>\\n        <br>\\n        <h5 className = \\\"obi\\\">\").concat(rows[i].name, \"\\n          <a href = \\\"#\\\">\\n            <img src = \\\"/static/\").concat(rows[i].agents_photo, \"\\\" width = \\\"70px;\\\" height=\\\"70px;\\\" style = {{border-radius: \\\"50\\\";}}>\\n          </a>\\n        </h5>\\n        <br>\\n        <h4>\").concat(rows[i].address, \"</h4>\\n        <br>\\n        <p className = \\\"icons\\\">\\n          <img src = \\\"/static/bed.png\\\">\").concat(rows[i].bed, \"\\n          <img src = \\\"/static/shower.png\\\">\").concat(rows[i].shower, \"\\n          <img src = \\\"/static/car.png\\\">\").concat(rows[i].bed, \"</p>\\n        <p className = \\\"inspe\\\">\\n          <img src = \\\"/static/planner.png\\\"> Inspection : \").concat(rows[i].inspection, \"</p>\\n        <br>\\n    </diV>\");\n            }\n\n            withAgentsReplaced = data.replace(/@@@property@@@/g, str);\n            tokenPayload = logInCookieTokenPayload(req);\n\n            if (tokenPayload && tokenPayload.role == 'agent') {\n              loggedIn2(withAgentsReplaced, tokenPayload, res);\n            } else {\n              withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, '');\n              finish(withGreetingAndAgentsReplaced, res);\n            }\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 6]]);\n  }));\n  return _propertyMain.apply(this, arguments);\n}\n\n; // Individual property pages\n\nfunction individualProperty(_x3, _x4) {\n  return _individualProperty.apply(this, arguments);\n} // Add property feature\n\n\nfunction _individualProperty() {\n  _individualProperty = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(req, res) {\n    var idNumber, query, rows, agentID, agentQuery, agentRows;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            idNumber = parseInt(req.query.id);\n            query = \"SELECT * FROM property WHERE id = \".concat(idNumber, \";\");\n            _context3.next = 4;\n            return dbMysql.promisifiedQuery(query);\n\n          case 4:\n            rows = _context3.sent;\n            agentID = rows[0].agent_id;\n            agentQuery = \"SELECT name, agents_photo   FROM  agents WHERE id = \".concat(agentID);\n            _context3.next = 9;\n            return dbMysql.promisifiedQuery(agentQuery);\n\n          case 9:\n            agentRows = _context3.sent;\n            res.render('gallery.ejs', {\n              address: rows[0].address,\n              houseImage: rows[0].image_path,\n              shower: rows[0].shower,\n              bed: rows[0].bed,\n              car: rows[0].car,\n              inspection: rows[0].inspection,\n              name: agentRows[0].name,\n              agents_photo: agentRows[0].agents_photo\n            });\n            res.end();\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _individualProperty.apply(this, arguments);\n}\n\nvar addProperty = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    var address, inspection, image_path, addName, bed, shower, car, number, rows, card;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            address = req.body.address;\n            inspection = req.body.inspection;\n            image_path = req.body.image_path;\n            addName = req.body.agentName;\n            bed = req.body.bed;\n            shower = req.body.shower;\n            car = req.body.car;\n            number = parseInt(req.query.id);\n            _context.next = 10;\n            return dbMysql.promisifiedQuery(\"SELECT * from agents WHERE name LIKE \\\"\".concat(addName, \"%\\\";\"));\n\n          case 10:\n            rows = _context.sent;\n            card = \"\\n    <div className = \\\"imgs\\\">\\n      <br>\\n      <p className = \\\"right\\\">Ultimo Real Estate</p>\\n      <br>\\n      <a target=\\\"_blank\\\" href=\\\"./properties/house\".concat(number, \".html\\\">\\n        <img src= /static/\").concat(image_path, \" alt=\\\"housePicture\\\" style=\\\"width:100%; height: 242px;\\\">\\n      </a><br>\\n      <h5 className = \\\"obi\\\">\").concat(rows[0].name, \"\\n        <a href = \\\"#\\\">\\n          <img src = \\\"/static/\").concat(rows[0].agents_photo, \"\\\" width = \\\"70px;\\\" height=\\\"70px;\\\" \\n          style = {{border-radius: \\\"50%;\\\"}}>\\n        </a>\\n      </h5>\\n      <br>\\n      <h4>\").concat(address, \"</h4><br>\\n      <p className = \\\"icons\\\">\\n        <img src = \\\"/static/bed.png\\\">\").concat(bed, \"\\n        <img src = \\\"/static/shower.png\\\">\").concat(shower, \"\\n        <img src = \\\"/static/car.png\\\">\").concat(car, \"\\n      </p>\\n      <p className = \\\"inspe\\\">\\n        <img src = \\\"/static/planner.png\\\"> Inspection : \").concat(inspection, \"\\n      </p>\\n      <br>\\n    </diV>\");\n            _context.next = 14;\n            return dbMysql.promisifiedQuery(\"\\n  INSERT INTO property (agent_id, address, image_path, inspection, \\n    bed, shower, car) \\n    VALUES ('\".concat(rows[0].id, \"','\").concat(address, \"', '\").concat(image_path, \"', '\").concat(inspection, \"', \").concat(bed, \", \").concat(shower, \", \").concat(car, \");\\n  \"));\n\n          case 14:\n            res.send(card);\n            res.end();\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addProperty(_x5, _x6) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Export\n\n\nexport default propertyMain; // module.exports.individualProperty = individualProperty;\n// module.exports.addProperty = addProperty;","map":{"version":3,"sources":["C:/Users/shoko/src/URE3-React/ure-nextjs/pages/dbproperty.js"],"names":["queryAsync","jwt","fs","promisify","readFileAsync","readFile","logInCookieTokenPayload","req","cookie","header","regex","token","match","decoded","verify","finish","body","res","send","end","loggedIn2","withAgentsReplaced","tokenPayload","addForm","withGreetingAndAgentsReplaced","replace","propertyMain","__dirname","data","status","rows","str","i","length","id","image_path","name","agents_photo","address","bed","shower","inspection","role","individualProperty","idNumber","parseInt","query","dbMysql","promisifiedQuery","agentID","agent_id","agentQuery","agentRows","render","houseImage","car","addProperty","addName","agentName","number","card"],"mappings":"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","sourcesContent":["import queryAsync from '../mysql';\r\nimport jwt from 'jsonwebtoken';\r\nimport fs from 'fs';\r\nimport { promisify } from 'util';\r\n\r\nconst readFileAsync = promisify(fs.readFile);\r\n\r\nfunction logInCookieTokenPayload(req) {\r\ntry{\r\n    let cookie = req.header('Cookie');\r\n    const regex = /logInCookie\\=([A-Za-z0-9\\.\\_\\-]+)/;\r\n    let token = cookie.match(regex)[1];\r\n    let decoded;\r\n    decoded = jwt.verify(token, 'ShokoDIDit');\r\n    return decoded;\r\n  }catch{\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction finish(body, res) {\r\n  res.send(body);\r\n  res.end();\r\n}\r\n\r\nfunction loggedIn2(withAgentsReplaced, tokenPayload, res){\r\n  let addForm = `\r\n  <h2 style = \"text-align: center; margin-top: 50px\">Add more property</h2>\r\n    <div className = \"addProperty\">\r\n      <form action = \"/moreproperty\" method = \"POST\" id = \"moreProperty\">\r\n        <div className = \"marginTop\">\r\n          <label for = \"address\">Address of Property</label><br>\r\n          <input id = \"address\" type = \"text\" name = \"address\" \r\n                  placeholder=\"Property Address\" size=\"36\" required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"inspection\">Inspection Date</label><br>\r\n          <input id = \"inspection\" type = \"text\" name = \"inspection\" \r\n                  placeholder=\"Open xx/xx/ xx:xxam/pm\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"image_path\">Tytle of the Image File</label><br>\r\n          <input id = \"image_path\" type = \"text\" name = \"image_path\" \r\n                  placeholder=\"example.jpg\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"agentName\">Agent's name</label>\r\n          <input id = \"agentName\" type = \"text\" name = \"agentName\" \r\n                  placeholder=\"Full name\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Bed Rooms</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"bed\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"bed\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"bed\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"bed\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"bed\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Shower Rooms</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"shower\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"shower\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"shower\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"shower\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"shower\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Car Parking</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"car\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"car\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"car\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"car\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"car\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <button type = 'submit' id = \"addPropertyBtn\">OK</button>\r\n      </form>\r\n    </div>`;\r\n  let withGreetingAndAgentsReplaced = \r\n        withAgentsReplaced.replace(/@@@addForm@@@/g, addForm);\r\n  finish(withGreetingAndAgentsReplaced, res)\r\n}\r\n\r\nexport async function propertyMain(req, res){\r\n\r\n  let data;\r\n  try{\r\n    data = await readFileAsync(__dirname + '/pages/Properties.js', 'utf-8');\r\n  }catch{\r\n    res.status(404).send('No page found!');\r\n    res.end();\r\n  }\r\n\r\n  let rows = await queryAsync(`\r\n    SELECT property.id, property.address, property.image_path, property.inspection, \r\n    property.bed, property.shower, property.car, agents.name, agents.agents_photo \r\n    FROM property \r\n    JOIN agents ON property.agent_id = agents.id;\r\n  `);\r\n    \r\n  let str = '';\r\n  for (let i = 0; i < rows.length; i++){\r\n    str += `\r\n    <div className = \"imgs\">\r\n        <br>\r\n        <p className = \"right\">Ultimo Real Estate</p>\r\n        <br>\r\n        <a target=\"_blank\" href=\"./gallery?id=${rows[i].id}\">\r\n          <img src= '/static/${rows[i].image_path}' alt=\"housePicture\" \r\n          style={{width: \"100\", height: 242;}}>\r\n        </a>\r\n        <br>\r\n        <h5 className = \"obi\">${rows[i].name}\r\n          <a href = \"#\">\r\n            <img src = \"/static/${rows[i].agents_photo}\" width = \"70px;\" height=\"70px;\" style = {{border-radius: \"50\";}}>\r\n          </a>\r\n        </h5>\r\n        <br>\r\n        <h4>${rows[i].address}</h4>\r\n        <br>\r\n        <p className = \"icons\">\r\n          <img src = \"/static/bed.png\">${rows[i].bed}\r\n          <img src = \"/static/shower.png\">${rows[i].shower}\r\n          <img src = \"/static/car.png\">${rows[i].bed}</p>\r\n        <p className = \"inspe\">\r\n          <img src = \"/static/planner.png\"> Inspection : ${rows[i].inspection}</p>\r\n        <br>\r\n    </diV>`\r\n  }\r\n  const withAgentsReplaced = data.replace(/@@@property@@@/g, str)\r\n  let tokenPayload = logInCookieTokenPayload(req);\r\n\r\n  if(tokenPayload && tokenPayload.role == 'agent'){\r\n    loggedIn2(withAgentsReplaced, tokenPayload, res)\r\n  }else{\r\n    const withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, '');\r\n    finish(withGreetingAndAgentsReplaced, res);\r\n  }\r\n};\r\n\r\n\r\n// Individual property pages\r\nasync function individualProperty(req, res){\r\n  let idNumber = parseInt(req.query.id);\r\n  let query = `SELECT * FROM property WHERE id = ${idNumber};`;\r\n  let rows = await dbMysql.promisifiedQuery(query);\r\n  let agentID = rows[0].agent_id;\r\n\r\n  let agentQuery = `SELECT name, agents_photo   FROM  agents WHERE id = ${agentID}`;\r\n  let agentRows = await dbMysql.promisifiedQuery(agentQuery);\r\n  res.render('gallery.ejs', {\r\n    address: rows[0].address,\r\n    houseImage: rows[0].image_path,\r\n    shower: rows[0].shower,\r\n    bed: rows[0].bed,\r\n    car: rows[0].car,\r\n    inspection: rows[0].inspection,\r\n    name: agentRows[0].name,\r\n    agents_photo: agentRows[0].agents_photo\r\n  });\r\n  res.end();\r\n}\r\n\r\n\r\n// Add property feature\r\nconst addProperty =  async function(req, res){\r\n  let address = req.body.address;\r\n  let inspection = req.body.inspection;\r\n  let image_path = req.body.image_path;\r\n  let addName = req.body.agentName;\r\n  let bed = req.body.bed;\r\n  let shower = req.body.shower;\r\n  let car = req.body.car;\r\n  let number = parseInt(req.query.id);\r\n\r\n  let rows = await dbMysql.promisifiedQuery(`SELECT * from agents WHERE name LIKE \"${addName}%\";`);\r\n  let card = `\r\n    <div className = \"imgs\">\r\n      <br>\r\n      <p className = \"right\">Ultimo Real Estate</p>\r\n      <br>\r\n      <a target=\"_blank\" href=\"./properties/house${number}.html\">\r\n        <img src= /static/${image_path} alt=\"housePicture\" style=\"width:100%; height: 242px;\">\r\n      </a><br>\r\n      <h5 className = \"obi\">${rows[0].name}\r\n        <a href = \"#\">\r\n          <img src = \"/static/${rows[0].agents_photo}\" width = \"70px;\" height=\"70px;\" \r\n          style = {{border-radius: \"50%;\"}}>\r\n        </a>\r\n      </h5>\r\n      <br>\r\n      <h4>${address}</h4><br>\r\n      <p className = \"icons\">\r\n        <img src = \"/static/bed.png\">${bed}\r\n        <img src = \"/static/shower.png\">${shower}\r\n        <img src = \"/static/car.png\">${car}\r\n      </p>\r\n      <p className = \"inspe\">\r\n        <img src = \"/static/planner.png\"> Inspection : ${inspection}\r\n      </p>\r\n      <br>\r\n    </diV>`;\r\n  await dbMysql.promisifiedQuery(`\r\n  INSERT INTO property (agent_id, address, image_path, inspection, \r\n    bed, shower, car) \r\n    VALUES ('${rows[0].id}','${address}', '${image_path}', '${inspection}', ${bed}, ${shower}, ${car});\r\n  `);\r\n  res.send (card);  \r\n  res.end();\r\n}\r\n\r\n\r\n// Export\r\nexport default propertyMain;\r\n// module.exports.individualProperty = individualProperty;\r\n// module.exports.addProperty = addProperty;"]},"metadata":{},"sourceType":"module"}