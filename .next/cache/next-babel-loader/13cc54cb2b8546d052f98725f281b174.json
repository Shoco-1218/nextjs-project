{"ast":null,"code":"import queryAsync from '../mysql';\nimport jwt from 'jsonwebtoken';\nimport fs from 'fs';\nimport { promisify } from 'util';\nconst readFileAsync = promisify(fs.readFile);\n\nfunction logInCookieTokenPayload(req) {\n  try {\n    let cookie = req.header('Cookie');\n    const regex = /logInCookie\\=([A-Za-z0-9\\.\\_\\-]+)/;\n    let token = cookie.match(regex)[1];\n    let decoded;\n    decoded = jwt.verify(token, 'ShokoDIDit');\n    return decoded;\n  } catch {\n    return null;\n  }\n}\n\nfunction finish(body, res) {\n  res.send(body);\n  res.end();\n}\n\nfunction loggedIn2(withAgentsReplaced, tokenPayload, res) {\n  let addForm = `\n  <h2 style = \"text-align: center; margin-top: 50px\">Add more property</h2>\n    <div className = \"addProperty\">\n      <form action = \"/moreproperty\" method = \"POST\" id = \"moreProperty\">\n        <div className = \"marginTop\">\n          <label for = \"address\">Address of Property</label><br>\n          <input id = \"address\" type = \"text\" name = \"address\" \n                  placeholder=\"Property Address\" size=\"36\" required>\n        </div>\n        <div className = \"marginTop\">\n          <label for = \"inspection\">Inspection Date</label><br>\n          <input id = \"inspection\" type = \"text\" name = \"inspection\" \n                  placeholder=\"Open xx/xx/ xx:xxam/pm\" size=\"36\"  required>\n        </div>\n        <div className = \"marginTop\">\n          <label for = \"image_path\">Tytle of the Image File</label><br>\n          <input id = \"image_path\" type = \"text\" name = \"image_path\" \n                  placeholder=\"example.jpg\" size=\"36\"  required>\n        </div>\n        <div className = \"marginTop\">\n          <label for = \"agentName\">Agent's name</label>\n          <input id = \"agentName\" type = \"text\" name = \"agentName\" \n                  placeholder=\"Full name\" size=\"36\"  required>\n        </div>\n        <div className = \"marginTop\">\n          <label >The number of Bed Rooms</label>\n          <div id=\"radio\">\n            1 <input type=\"radio\" name=\"bed\" value=\"1\" >\n            2 <input type=\"radio\" name=\"bed\" value=\"2\" >\n            3 <input type=\"radio\" name=\"bed\" value=\"3\" >    \n            4 <input type=\"radio\" name=\"bed\" value=\"4\" >    \n            5 <input type=\"radio\" name=\"bed\" value=\"5\" >    \n          </div> \n        </div>\n        <div className = \"marginTop\">\n          <label >The number of Shower Rooms</label>\n          <div id=\"radio\">\n            1 <input type=\"radio\" name=\"shower\" value=\"1\" >\n            2 <input type=\"radio\" name=\"shower\" value=\"2\" >\n            3 <input type=\"radio\" name=\"shower\" value=\"3\" >    \n            4 <input type=\"radio\" name=\"shower\" value=\"4\" >    \n            5 <input type=\"radio\" name=\"shower\" value=\"5\" >    \n          </div> \n        </div>\n        <div className = \"marginTop\">\n          <label >The number of Car Parking</label>\n          <div id=\"radio\">\n            1 <input type=\"radio\" name=\"car\" value=\"1\" >\n            2 <input type=\"radio\" name=\"car\" value=\"2\" >\n            3 <input type=\"radio\" name=\"car\" value=\"3\" >    \n            4 <input type=\"radio\" name=\"car\" value=\"4\" >    \n            5 <input type=\"radio\" name=\"car\" value=\"5\" >    \n          </div> \n        </div>\n        <button type = 'submit' id = \"addPropertyBtn\">OK</button>\n      </form>\n    </div>`;\n  let withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, addForm);\n  finish(withGreetingAndAgentsReplaced, res);\n}\n\nexport async function getServerSideProps() {\n  let rows = await queryAsync(`\n    SELECT property.id, property.address, property.image_path, property.inspection, \n    property.bed, property.shower, property.car, agents.name, agents.agents_photo \n    FROM property \n    JOIN agents ON property.agent_id = agents.id;\n  `);\n  let dbdata = JSON.stringify(rows);\n  return {\n    props: {\n      dbdata\n    }\n  };\n}\n;\nexport async function Index(req, res, {\n  dbdata\n}) {\n  let data;\n\n  try {\n    data = await readFileAsync(__dirname + '/pages/Properties.js', 'utf-8');\n  } catch {\n    res.status(404).send('No page found!');\n    res.end();\n  }\n\n  let dbdataString = toString(dbdata);\n  let str = '';\n\n  for (let i = 0; i < dbdataString.length; i++) {\n    str += `\n    <div className = \"imgs\">\n        <br>\n        <p className = \"right\">Ultimo Real Estate</p>\n        <br>\n        <a target=\"_blank\" href=\"./gallery?id=${dbdataString[i].id}\">\n          <img src= '/static/${dbdataString[i].image_path}' alt=\"housePicture\" \n          style={{width: \"100\", height: 242;}}>\n        </a>\n        <br>\n        <h5 className = \"obi\">${dbdataString[i].name}\n          <a href = \"#\">\n            <img src = \"/static/${dbdataString[i].agents_photo}\" width = \"70px;\" height=\"70px;\" style = {{border-radius: \"50\";}}>\n          </a>\n        </h5>\n        <br>\n        <h4>${dbdataString[i].address}</h4>\n        <br>\n        <p className = \"icons\">\n          <img src = \"/static/bed.png\">${dbdataString[i].bed}\n          <img src = \"/static/shower.png\">${dbdataString[i].shower}\n          <img src = \"/static/car.png\">${dbdataString[i].bed}</p>\n        <p className = \"inspe\">\n          <img src = \"/static/planner.png\"> Inspection : ${dbdataString[i].inspection}</p>\n        <br>\n    </diV>`;\n  }\n\n  const withAgentsReplaced = data.replace(/@@@property@@@/g, str);\n  let tokenPayload = logInCookieTokenPayload(req);\n\n  if (tokenPayload && tokenPayload.role == 'agent') {\n    loggedIn2(withAgentsReplaced, tokenPayload, res);\n  } else {\n    const withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, '');\n    finish(withGreetingAndAgentsReplaced, res);\n  }\n}\nexport default Index; // Add property feature\n// const addProperty =  async function(req, res){\n//   let address = req.body.address;\n//   let inspection = req.body.inspection;\n//   let image_path = req.body.image_path;\n//   let addName = req.body.agentName;\n//   let bed = req.body.bed;\n//   let shower = req.body.shower;\n//   let car = req.body.car;\n//   let number = parseInt(req.query.id);\n//   let rows = await dbMysql.promisifiedQuery(`SELECT * from agents WHERE name LIKE \"${addName}%\";`);\n//   let card = `\n//     <div className = \"imgs\">\n//       <br>\n//       <p className = \"right\">Ultimo Real Estate</p>\n//       <br>\n//       <a target=\"_blank\" href=\"./properties/house${number}.html\">\n//         <img src= /static/${image_path} alt=\"housePicture\" style=\"width:100%; height: 242px;\">\n//       </a><br>\n//       <h5 className = \"obi\">${rows[0].name}\n//         <a href = \"#\">\n//           <img src = \"/static/${rows[0].agents_photo}\" width = \"70px;\" height=\"70px;\" \n//           style = {{border-radius: \"50%;\"}}>\n//         </a>\n//       </h5>\n//       <br>\n//       <h4>${address}</h4><br>\n//       <p className = \"icons\">\n//         <img src = \"/static/bed.png\">${bed}\n//         <img src = \"/static/shower.png\">${shower}\n//         <img src = \"/static/car.png\">${car}\n//       </p>\n//       <p className = \"inspe\">\n//         <img src = \"/static/planner.png\"> Inspection : ${inspection}\n//       </p>\n//       <br>\n//     </diV>`;\n//   await dbMysql.promisifiedQuery(`\n//   INSERT INTO property (agent_id, address, image_path, inspection, \n//     bed, shower, car) \n//     VALUES ('${rows[0].id}','${address}', '${image_path}', '${inspection}', ${bed}, ${shower}, ${car});\n//   `);\n//   res.send (card);  \n//   res.end();\n// }","map":{"version":3,"sources":["C:/Users/shoko/src/URE3-React/ure-nextjs/pages/dbproperty.js"],"names":["queryAsync","jwt","fs","promisify","readFileAsync","readFile","logInCookieTokenPayload","req","cookie","header","regex","token","match","decoded","verify","finish","body","res","send","end","loggedIn2","withAgentsReplaced","tokenPayload","addForm","withGreetingAndAgentsReplaced","replace","getServerSideProps","rows","dbdata","JSON","stringify","props","Index","data","__dirname","status","dbdataString","toString","str","i","length","id","image_path","name","agents_photo","address","bed","shower","inspection","role"],"mappings":"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","sourcesContent":["import queryAsync from '../mysql';\r\nimport jwt from 'jsonwebtoken';\r\nimport fs from 'fs';\r\nimport { promisify } from 'util';\r\n\r\nconst readFileAsync = promisify(fs.readFile);\r\n\r\nfunction logInCookieTokenPayload(req) {\r\n  try{\r\n    let cookie = req.header('Cookie');\r\n    const regex = /logInCookie\\=([A-Za-z0-9\\.\\_\\-]+)/;\r\n    let token = cookie.match(regex)[1];\r\n    let decoded;\r\n    decoded = jwt.verify(token, 'ShokoDIDit');\r\n    return decoded;\r\n  }catch{\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction finish(body, res) {\r\n  res.send(body);\r\n  res.end();\r\n}\r\n\r\nfunction loggedIn2(withAgentsReplaced, tokenPayload, res){\r\n  let addForm = `\r\n  <h2 style = \"text-align: center; margin-top: 50px\">Add more property</h2>\r\n    <div className = \"addProperty\">\r\n      <form action = \"/moreproperty\" method = \"POST\" id = \"moreProperty\">\r\n        <div className = \"marginTop\">\r\n          <label for = \"address\">Address of Property</label><br>\r\n          <input id = \"address\" type = \"text\" name = \"address\" \r\n                  placeholder=\"Property Address\" size=\"36\" required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"inspection\">Inspection Date</label><br>\r\n          <input id = \"inspection\" type = \"text\" name = \"inspection\" \r\n                  placeholder=\"Open xx/xx/ xx:xxam/pm\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"image_path\">Tytle of the Image File</label><br>\r\n          <input id = \"image_path\" type = \"text\" name = \"image_path\" \r\n                  placeholder=\"example.jpg\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label for = \"agentName\">Agent's name</label>\r\n          <input id = \"agentName\" type = \"text\" name = \"agentName\" \r\n                  placeholder=\"Full name\" size=\"36\"  required>\r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Bed Rooms</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"bed\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"bed\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"bed\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"bed\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"bed\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Shower Rooms</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"shower\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"shower\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"shower\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"shower\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"shower\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <div className = \"marginTop\">\r\n          <label >The number of Car Parking</label>\r\n          <div id=\"radio\">\r\n            1 <input type=\"radio\" name=\"car\" value=\"1\" >\r\n            2 <input type=\"radio\" name=\"car\" value=\"2\" >\r\n            3 <input type=\"radio\" name=\"car\" value=\"3\" >    \r\n            4 <input type=\"radio\" name=\"car\" value=\"4\" >    \r\n            5 <input type=\"radio\" name=\"car\" value=\"5\" >    \r\n          </div> \r\n        </div>\r\n        <button type = 'submit' id = \"addPropertyBtn\">OK</button>\r\n      </form>\r\n    </div>`;\r\n  let withGreetingAndAgentsReplaced = \r\n        withAgentsReplaced.replace(/@@@addForm@@@/g, addForm);\r\n  finish(withGreetingAndAgentsReplaced, res)\r\n}\r\n\r\nexport async function getServerSideProps(){\r\n\r\n  let rows = await queryAsync(`\r\n    SELECT property.id, property.address, property.image_path, property.inspection, \r\n    property.bed, property.shower, property.car, agents.name, agents.agents_photo \r\n    FROM property \r\n    JOIN agents ON property.agent_id = agents.id;\r\n  `);\r\n    \r\n  let dbdata = JSON.stringify(rows);\r\n\r\n  return {\r\n    props: {\r\n      dbdata\r\n    },\r\n  }\r\n};\r\n\r\nexport async function Index(req, res, { dbdata }){\r\n  let data;\r\n  try{\r\n    data = await readFileAsync(__dirname + '/pages/Properties.js', 'utf-8');\r\n  }catch{\r\n    res.status(404).send('No page found!');\r\n    res.end();\r\n  }\r\n\r\n  let dbdataString = toString(dbdata);\r\n\r\n  let str = '';\r\n  for (let i = 0; i < dbdataString.length; i++){\r\n    str += `\r\n    <div className = \"imgs\">\r\n        <br>\r\n        <p className = \"right\">Ultimo Real Estate</p>\r\n        <br>\r\n        <a target=\"_blank\" href=\"./gallery?id=${dbdataString[i].id}\">\r\n          <img src= '/static/${dbdataString[i].image_path}' alt=\"housePicture\" \r\n          style={{width: \"100\", height: 242;}}>\r\n        </a>\r\n        <br>\r\n        <h5 className = \"obi\">${dbdataString[i].name}\r\n          <a href = \"#\">\r\n            <img src = \"/static/${dbdataString[i].agents_photo}\" width = \"70px;\" height=\"70px;\" style = {{border-radius: \"50\";}}>\r\n          </a>\r\n        </h5>\r\n        <br>\r\n        <h4>${dbdataString[i].address}</h4>\r\n        <br>\r\n        <p className = \"icons\">\r\n          <img src = \"/static/bed.png\">${dbdataString[i].bed}\r\n          <img src = \"/static/shower.png\">${dbdataString[i].shower}\r\n          <img src = \"/static/car.png\">${dbdataString[i].bed}</p>\r\n        <p className = \"inspe\">\r\n          <img src = \"/static/planner.png\"> Inspection : ${dbdataString[i].inspection}</p>\r\n        <br>\r\n    </diV>`\r\n  }\r\n  \r\n\r\n  const withAgentsReplaced = data.replace(/@@@property@@@/g, str)\r\n  let tokenPayload = logInCookieTokenPayload(req);\r\n\r\n  if(tokenPayload && tokenPayload.role == 'agent'){\r\n    loggedIn2(withAgentsReplaced, tokenPayload, res)\r\n  }else{\r\n    const withGreetingAndAgentsReplaced = withAgentsReplaced.replace(/@@@addForm@@@/g, '');\r\n    finish(withGreetingAndAgentsReplaced, res);\r\n  }\r\n}\r\n\r\nexport default Index;\r\n\r\n\r\n// Add property feature\r\n// const addProperty =  async function(req, res){\r\n//   let address = req.body.address;\r\n//   let inspection = req.body.inspection;\r\n//   let image_path = req.body.image_path;\r\n//   let addName = req.body.agentName;\r\n//   let bed = req.body.bed;\r\n//   let shower = req.body.shower;\r\n//   let car = req.body.car;\r\n//   let number = parseInt(req.query.id);\r\n\r\n//   let rows = await dbMysql.promisifiedQuery(`SELECT * from agents WHERE name LIKE \"${addName}%\";`);\r\n//   let card = `\r\n//     <div className = \"imgs\">\r\n//       <br>\r\n//       <p className = \"right\">Ultimo Real Estate</p>\r\n//       <br>\r\n//       <a target=\"_blank\" href=\"./properties/house${number}.html\">\r\n//         <img src= /static/${image_path} alt=\"housePicture\" style=\"width:100%; height: 242px;\">\r\n//       </a><br>\r\n//       <h5 className = \"obi\">${rows[0].name}\r\n//         <a href = \"#\">\r\n//           <img src = \"/static/${rows[0].agents_photo}\" width = \"70px;\" height=\"70px;\" \r\n//           style = {{border-radius: \"50%;\"}}>\r\n//         </a>\r\n//       </h5>\r\n//       <br>\r\n//       <h4>${address}</h4><br>\r\n//       <p className = \"icons\">\r\n//         <img src = \"/static/bed.png\">${bed}\r\n//         <img src = \"/static/shower.png\">${shower}\r\n//         <img src = \"/static/car.png\">${car}\r\n//       </p>\r\n//       <p className = \"inspe\">\r\n//         <img src = \"/static/planner.png\"> Inspection : ${inspection}\r\n//       </p>\r\n//       <br>\r\n//     </diV>`;\r\n//   await dbMysql.promisifiedQuery(`\r\n//   INSERT INTO property (agent_id, address, image_path, inspection, \r\n//     bed, shower, car) \r\n//     VALUES ('${rows[0].id}','${address}', '${image_path}', '${inspection}', ${bed}, ${shower}, ${car});\r\n//   `);\r\n//   res.send (card);  \r\n//   res.end();\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}